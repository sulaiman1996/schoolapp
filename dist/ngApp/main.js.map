{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/aggrid/customcell/customcell.component.css","webpack:///./src/app/aggrid/customcell/customcell.component.html","webpack:///./src/app/aggrid/customcell/customcell.component.ts","webpack:///./src/app/aggrid/customized-cell/customized-cell.component.css","webpack:///./src/app/aggrid/customized-cell/customized-cell.component.html","webpack:///./src/app/aggrid/customized-cell/customized-cell.component.ts","webpack:///./src/app/aggrid/testaggrid/testaggrid.component.css","webpack:///./src/app/aggrid/testaggrid/testaggrid.component.html","webpack:///./src/app/aggrid/testaggrid/testaggrid.component.ts","webpack:///./src/app/aggridtest/aggridtest.component.css","webpack:///./src/app/aggridtest/aggridtest.component.html","webpack:///./src/app/aggridtest/aggridtest.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/login-user/login-user.component.css","webpack:///./src/app/auth/login-user/login-user.component.html","webpack:///./src/app/auth/login-user/login-user.component.ts","webpack:///./src/app/auth/register-user/register-user.component.css","webpack:///./src/app/auth/register-user/register-user.component.html","webpack:///./src/app/auth/register-user/register-user.component.ts","webpack:///./src/app/auth/service/auth.guard.roles.ts","webpack:///./src/app/auth/service/auth.guard.ts","webpack:///./src/app/auth/service/auth.service.ts","webpack:///./src/app/auth/service/token-interceptor.service.ts","webpack:///./src/app/event.service.ts","webpack:///./src/app/events/events.component.css","webpack:///./src/app/events/events.component.html","webpack:///./src/app/events/events.component.ts","webpack:///./src/app/example/example.component.css","webpack:///./src/app/example/example.component.html","webpack:///./src/app/example/example.component.ts","webpack:///./src/app/global.ts","webpack:///./src/app/heroes/heroes.component.css","webpack:///./src/app/heroes/heroes.component.html","webpack:///./src/app/heroes/heroes.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/masters/divisions/division/division.component.css","webpack:///./src/app/masters/divisions/division/division.component.html","webpack:///./src/app/masters/divisions/division/division.component.ts","webpack:///./src/app/masters/masters/master/master.component.css","webpack:///./src/app/masters/masters/master/master.component.html","webpack:///./src/app/masters/masters/master/master.component.ts","webpack:///./src/app/masters/masters/masteredit/masteredit.component.css","webpack:///./src/app/masters/masters/masteredit/masteredit.component.html","webpack:///./src/app/masters/masters/masteredit/masteredit.component.ts","webpack:///./src/app/masters/masters/masters/masters.component.css","webpack:///./src/app/masters/masters/masters/masters.component.html","webpack:///./src/app/masters/masters/masters/masters.component.ts","webpack:///./src/app/masters/student/student-detail/student-detail.component.css","webpack:///./src/app/masters/student/student-detail/student-detail.component.html","webpack:///./src/app/masters/student/student-detail/student-detail.component.ts","webpack:///./src/app/masters/student/student/student.component.css","webpack:///./src/app/masters/student/student/student.component.html","webpack:///./src/app/masters/student/student/student.component.ts","webpack:///./src/app/masters/student/studentlist/studentlist.component.css","webpack:///./src/app/masters/student/studentlist/studentlist.component.html","webpack:///./src/app/masters/student/studentlist/studentlist.component.ts","webpack:///./src/app/masters/teacher/teacher-detail/teacher-detail.component.css","webpack:///./src/app/masters/teacher/teacher-detail/teacher-detail.component.html","webpack:///./src/app/masters/teacher/teacher-detail/teacher-detail.component.ts","webpack:///./src/app/masters/teacher/teacherlist/teacherlist.component.css","webpack:///./src/app/masters/teacher/teacherlist/teacherlist.component.html","webpack:///./src/app/masters/teacher/teacherlist/teacherlist.component.ts","webpack:///./src/app/masterservices/master.service.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/special-events/special-events.component.css","webpack:///./src/app/special-events/special-events.component.html","webpack:///./src/app/special-events/special-events.component.ts","webpack:///./src/app/tools/selector/selector.component.css","webpack:///./src/app/tools/selector/selector.component.html","webpack:///./src/app/tools/selector/selector.component.ts","webpack:///./src/app/trans/att/attendance/attendance.component.css","webpack:///./src/app/trans/att/attendance/attendance.component.html","webpack:///./src/app/trans/att/attendance/attendance.component.ts","webpack:///./src/app/transervice/attendance.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"button {\\n    /* background: black;\\n    \\n    border: none; */\\n    width: 100%;\\n    text-align: left;\\n    color: blue;\\n}\"","module.exports = \"<button (click)=\\\"excecute()\\\">{{data}}</button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customcell',\n  templateUrl: './customcell.component.html',\n  styleUrls: ['./customcell.component.css']\n})\nexport class CustomcellComponent implements OnInit {\n  data: any;\n  param: any;\n  \n  constructor() { }\n  agInit(param) {\n    this.param = param;\n    this.data = param.value;\n  }\n  ngOnInit() {\n  }\n  excecute() {\n    // console.log(this.param.data);\n    // this.param.context.componentParent.updateAllRow();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"color: yellow;background-color:black ;text-align: center\\\">\\n    {{cellvalue}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\n\n@Component({\n  selector: 'app-customized-cell',\n  templateUrl: './customized-cell.component.html',\n  styleUrls: ['./customized-cell.component.css']\n})\nexport class CustomizedCellComponent implements OnInit, ICellRendererAngularComp {\n  private cellvalue: any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  agInit(params: any){\n    this.cellvalue = params.value;\n  }\n  refresh(params: any): boolean {\n    this.cellvalue = params.value;\n    return true;\n  }\n}\n","module.exports = \"\"","module.exports = \"<ag-grid-angular #agGrid style=\\\"width:100%;height:300px\\\" class=\\\"ag-theme-balham\\\" rowSelection=\\\"single\\\" [columnDefs]='columnDefs' [rowData]='rows' (gridReady)=\\\"onGridReady($event)\\\">\\n\\n</ag-grid-angular>\\n<!-- <ag-grid-angular #agGrid style=\\\"width: 500px; height: 500px;\\\" \\n    class=\\\"ag-theme-balham\\\" [enableSorting]=\\\"true\\\" [enableFilter]=\\\"true\\\" [rowData]=\\\"rows\\\" \\n    (gridReady)=\\\"onGridReady($event)\\\" [columnDefs]=\\\"columnDefs\\\" \\n    rowSelection=\\\"multiple\\\" [pagination]=\\\"true\\\">\\n</ag-grid-angular> -->\\n\\n<button (click)=\\\"updateRow()\\\">Row Update</button>\\n<button (click)=\\\"updateCell()\\\">Cell Update</button>\\n<button (click)=\\\"updateAllRow()\\\">Update All</button>\\n<button (click)=\\\"clear()\\\">Clear</button>\\n<button (click)=\\\"delete()\\\">Delete</button>\"","import { CustomcellComponent } from './../customcell/customcell.component';\nimport { MasterService } from './../../masterservices/master.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { AgGridNg2 } from 'ag-grid-angular';\n// import { GridOptions } from 'ag-grid';\n@Component({\n  selector: 'app-testaggrid',\n  templateUrl: './testaggrid.component.html',\n  styleUrls: ['./testaggrid.component.css']\n})\nexport class TestaggridComponent implements OnInit {\n  @ViewChild('agGrid') agGrid: AgGridNg2;\n\n  gridApi: any;\n  columnApi: any;\n  gridOptions: any;\n  // private rowSelection = 'multiple';\n  constructor(private masterService: MasterService) { \n    // this.gridOptions = {\n    //   context: {\n    //     componentParent: this\n    //   }\n    // }\n  }\n  columnDefs = [\n    {headerName: 'Name', field: 'name', cellRendererFramework: CustomcellComponent, pinned: 'left'},\n    {headerName: 'Mobile', field: 'mobile'},\n    {headerName: 'State', field: 'state'},\n  ];\n  rows = [\n    {name: 'Sulaiman', mobile: '9747077122', state: 'Kerala'},\n    {name: 'Ayyappan', mobile: '1223344444', state: 'TN'},\n    {name: 'Hawas', mobile: '3443443444', state: 'Kerala'},\n   \n  ]\n  ngOnInit() {\n  }\n  onGridReady(param){\n    this.gridApi = param.api;\n    this.columnApi = param.columnApi;\n    // let idSequence = 0;\n    // this.gridApi.forEachNode( function(rowNode, index) {\n    //   rowNode.id = idSequence++;\n    // });\n  }\n  updateRow(){\n    var rowNode = this.gridApi.getRowNode(1);\n    rowNode.setData(\n      {name: 'Ayyappan', mobile: '1223344444', state: 'TN'}\n    );\n  }\n  updateCell(){\n    var rowNode = this.gridApi.getRowNode(1); \n    rowNode.setDataValue(\"mobile\",\"0000000000\");\n  }\n  updateAllRow(){\n    this.masterService.getPhoneBook()\n    .subscribe(\n      (data) => {\n          // console.log(data);\n          this.gridApi.setRowData([]);\n          // var newData = data;\n          this.gridApi.updateRowData({add: data});\n        }\n      )\n  }\n  clear() {\n    this.gridApi.setRowData([]);\n  }\n  delete() {\n    // let selectedData = this.gridApi.getSelectedRows();\n    // let res = this.gridApi.updateRowData({ remove: selectedData });\n    // console.log(res);\n    // var selectedNodes = this.gridOptions.api.getSelectedNodes();\n    // this.gridOptions.api.removeItems(selectedNodes);\n    // var selected = this.gridApi.getFocusedCell();\n    // selected.splice(selected.rowIndex, 1);\n    // this.gridApi.setRowData(this.gridApi.rowData);\n\n    // var res = this.gridApi.updateRowData({ add: {name: 'Sali', mobile: '90000000', state: 'UP'} });\n    // const selectedNodes = this.agGrid.api.getSelectedNodes();\n    //     const selectedData = selectedNodes.map( node => node.data );\n    //     const selectedDataStringPresentation = selectedData.map( node => node.make + ' ' + node.model).join(', ');\n    //     alert(`Selected nodes: ${selectedDataStringPresentation}`);\n\n    var selectedData = this.gridApi.getSelectedRows();\n    console.log(selectedData);\n    var res = this.gridApi.updateRowData({ remove: selectedData });\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/studentdetail/__new\\\">Create New </button>\\n\\n<div class=\\\"col-12\\\">\\n    <ag-grid-angular style=\\\"width: 100%;height: 400px;\\\" class=\\\"ag-theme-balham\\\" (gridReady)=\\\"onGridReady($event)\\\" [columnDefs]=\\\"columnDefs\\\" [enableSorting]=\\\"true\\\" [enableFilter]=\\\"true\\\" [animateRows]=\\\"true\\\" [pagination]=\\\"true\\\" [rowSelection]=\\\"single\\\" [paginationPageSize]=\\\"10\\\"\\n        [sortingOrder]=\\\"sortingOrder\\\" [enableColResize]=\\\"true\\\" [frameworkComponents]=\\\"frameworkComponents\\\" (rowClicked)=\\\"onRowClicked($event)\\\" [rowMultiSelectWithClick]=\\\"true\\\">\\n        <!-- [rowDragManaged]=\\\"true\\\" -->\\n    </ag-grid-angular>\\n</div>\\n<button (click)=\\\"getRow()\\\">Get row data</button>\"","import { CustomizedCellComponent } from './../aggrid/customized-cell/customized-cell.component';\nimport { MatFormFieldModule } from '@angular/material';\nimport { Component, OnInit } from '@angular/core';\nimport { MasterService } from '../masterservices/master.service';\nimport { MatSnackBar } from '@angular/material';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\n// import {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n@Component({\n  selector: 'app-aggridtest',\n  templateUrl: './aggridtest.component.html',\n  styleUrls: ['./aggridtest.component.css']\n})\nexport class AggridtestComponent implements OnInit {\n  private gridApi;\n  private gridColumnApi;\n  private columnDefs;\n  private sortingOrder;\n  private frameworkComponents;\n\n  constructor(private masterService: MasterService, private snackBar: MatSnackBar, private router: Router) {\n    this.columnDefs = [\n      {\n        headerName: 'No',\n        field: 'classNo',\n        width: 60,\n        sortingOrder: ['asc','desc'],\n        rowDrag : true,\n        cellRenderer: 'customizedNoCell'\n      },\n      {\n        headerName: 'Name',\n        field: 'name',\n        width: 100,\n        // editable: true,\n        // cellStyle: {color: 'red', 'background-color': 'green'},\n        sortingOrder: ['asc','desc'],\n        cellStyle: function(params) {\n          if (params.value == 'Joe') {\n              return {color: 'red', backgroundColor: 'green'};\n          } else {\n              return null;\n          }\n        }\n      },\n      {\n        headerName: 'Adm. No',\n        field: 'admNo',\n        width: 80,\n        cellStyle: {color: 'red'}\n      },\n      {\n        headerName: 'Date of Birth',\n        field: 'dob',\n        width: 100,\n        // cellStyle: {color: 'blue'},\n        filter: 'agDateColumnFilter',\n        cellRenderer: (data) => {\n          return data.value ? (new Date(data.value)).toLocaleDateString() : '';\n          },\n        filterParams: {\n          comparator: function(filterLocalDateAtMidnight, cellValue) {\n            var dateAsString = cellValue;\n            var dateParts = dateAsString.split(\"/\");\n            var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\n            if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n              return 0;\n            }\n            if (cellDate < filterLocalDateAtMidnight) {\n              return -1;\n            }\n            if (cellDate > filterLocalDateAtMidnight) {\n              return 1;\n            }\n          }\n        }\n      },\n      { headerName: 'Actions',\n          suppressMenu: true,\n          suppressSorting: true,\n\n          template:\n            // `<button type=\"button\" data-action-type=\"view\" class=\"btn btn-default\">\n            //    View\n            //  </button>\n\n            // <button type=\"button\" data-action-type=\"remove\" class=\"btn btn-default\">\n            //    Remove\n            // </button>`\n            `<button mat-button color=\"primary\" data-action-type=\"view\" >Edit</button>\n            <button mat-button color=\"warn\" data-action-type=\"remove\" >Delete</button>\n            `\n        }\n    ]\n    this.sortingOrder = ['asc', 'desc', 'null']\n    this.frameworkComponents = {\n      customizedNoCell: CustomizedCellComponent\n    }\n  }\n\n  editStudent(id) {\n    // this.snackBar.open('View action clicked-click', 'OK', {\n    //   duration: 3000\n    // });\n    // console.log('edit-id:  ' + id);\n    this.router.navigate([`/studentdetail/${id}`]);\n\n  }\n\n  onRowClicked(e) {\n    if (e.event.target !== undefined) {\n        let data = e.data;\n        let actionType = e.event.target.getAttribute(\"data-action-type\");\n\n        switch(actionType) {\n            case 'view':\n                return this.onActionViewClick(data);\n            case 'remove':\n                return this.onActionRemoveClick(data);\n        }\n    }\n}\n\n   onActionViewClick(data: any){\n    // this.snackBar.open('View action clicked', 'OK', {\n    //   duration: 3000\n    // });\n    console.log('View action clicked', data);\n    this.editStudent(data._id)\n    // this.router.navigate([`/studentdetail/${data._id}`]);\n  }\n\n   onActionRemoveClick(data: any){\n    this.snackBar.open('Remove action clicked', 'OK', {\n      duration: 3000\n    });\n      console.log('Remove action clicked', data);\n  }\n  ngOnInit() {\n  }\n  getRow(){\n    var rowNode = this.gridApi.getDisplayedRowAtIndex(0);\n    alert(rowNode.data.name);\n  }\n  \n  onGridReady(params){\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    // const dataValue = [{'firstName':'sulaiman','age':52},{'firstName':'Qaueed','age':22}];\n\n    this.masterService.getStudents()\n    .subscribe(\n      (data) => {\n          params.api.setRowData(data);\n        }\n      )\n  }\n}\n","import { AttendanceComponent } from './trans/att/attendance/attendance.component';\nimport { TeacherDetailComponent } from './masters/teacher/teacher-detail/teacher-detail.component';\nimport { MastereditComponent } from './masters/masters/masteredit/masteredit.component';\nimport { MastersComponent } from './masters/masters/masters/masters.component';\nimport { RegisterUserComponent } from './auth/register-user/register-user.component';\nimport { TestaggridComponent } from './aggrid/testaggrid/testaggrid.component';\nimport { StudentDetailComponent } from './masters/student/student-detail/student-detail.component';\nimport { AggridtestComponent } from './aggridtest/aggridtest.component';\nimport { AuthGuard } from './auth/service/auth.guard';\nimport { AuthGuardRoles } from './auth/service/auth.guard.roles';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EventsComponent } from './events/events.component';\nimport { SpecialEventsComponent } from './special-events/special-events.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ExampleComponent } from './example/example.component';\nimport { DivisionComponent } from './masters/divisions/division/division.component';\nimport { StudentComponent } from './masters/student/student/student.component';\nimport { StudentlistComponent } from './masters/student/studentlist/studentlist.component';\nimport { LoginUserComponent } from './auth/login-user/login-user.component';\nimport { SelectorComponent } from './tools/selector/selector.component';\nimport { MasterComponent } from './masters/masters/master/master.component';\nimport { TeacherlistComponent } from './masters/teacher/teacherlist/teacherlist.component';\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/selector',\n    pathMatch: 'full'\n  },\n  {\n    path: 'events',\n    component: EventsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'special',\n    component: SpecialEventsComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Parent']}\n  },\n  {\n    path: 'login',\n    component: LoginUserComponent\n  },\n  {\n    path: 'register',\n    component: RegisterUserComponent\n  },\n  {\n    path: 'selector',\n    component: SelectorComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'example',\n    component: TestaggridComponent\n  },\n  {\n    path: 'students',\n    component: StudentlistComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Teacher', 'Admin']}\n  },\n  {\n    path: 'teachers',\n    component: TeacherlistComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Teacher', 'Admin']}\n  },\n  {\n    path: 'teacherdetail/:id',\n    component: TeacherDetailComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Teacher', 'Admin']}\n  },\n  {\n    path: 'studentdetail/:id',\n    component: StudentDetailComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Teacher', 'Admin']}\n  },\n  {\n    path: 'masters',\n    component: MastersComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Admin', 'Teacher']}\n  },\n  {\n    path: 'division',\n    component: DivisionComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Admin']}\n  },\n  {\n    path: 'master',\n    component: MasterComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Admin', 'Teacher']}\n  },\n  {\n    path: 'masteredit',\n    component: MastereditComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Admin']}\n  },\n  {\n    path: 'attendance',\n    component: AttendanceComponent,\n    canActivate: [AuthGuardRoles],\n    data: {roles: ['Teacher']}\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* Application-wide Styles */\\n\\nh1 {\\n    color: #369;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 250%;\\n}\\n\\nh2,\\nh3 {\\n    color: #444;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-weight: lighter;\\n}\\n\\nbody {\\n    margin: 2em;\\n}\\n\\nbody,\\ninput[text],\\nbutton {\\n    color: #888;\\n    font-family: Cambria, Georgia;\\n}\\n\\n/* everywhere else */\\n\\n* {\\n    font-family: Arial, Helvetica, sans-serif;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">Events</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/special\\\" routerLinkActive=\\\"active\\\">Members</a>\\n            </li>\\n            <!-- <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedAsAdmin()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/division\\\" routerLinkActive=\\\"active\\\">Division</a>\\n            </li> -->\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedAsParent()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/example\\\" routerLinkActive=\\\"active\\\">Example</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedAsAdmin() || _authService.loggedAsTeacher()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/students\\\" routerLinkActive=\\\"active\\\">Students</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedAsAdmin() || _authService.loggedAsTeacher()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/masters\\\" routerLinkActive=\\\"active\\\">Masters</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedAsTeacher()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/attendance\\\" routerLinkActive=\\\"active\\\">Attendance</a>\\n            </li>\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav\\\">\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/selector\\\" routerLinkActive=\\\"active\\\">Options</a>\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n            <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"_authService.logoutUser()\\\">Logout</a>\\n        </ul>\\n    </div>\\n</nav>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","import { AuthService } from './auth/service/auth.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PMSAPTS VHSS';\n  items = ['item1', 'item2'];\n  admin = false;\n  parent = false;\n  teacher = false;\n  constructor(private _authService: AuthService){\n    \n  }\n  \n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { EventsComponent } from './events/events.component';\nimport { SpecialEventsComponent } from './special-events/special-events.component';\nimport { AuthService } from './auth/service/auth.service';\nimport { EventService } from './event.service';\nimport { MasterService } from './masterservices/master.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthGuard } from './auth/service/auth.guard';\nimport { AuthGuardRoles } from './auth/service/auth.guard.roles';\nimport { TokenInterceptorService } from './auth/service/token-interceptor.service';\nimport { AgGridModule } from 'ag-grid-angular';\n\nimport { ExampleComponent } from './example/example.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { DivisionComponent } from './masters/divisions/division/division.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule, MatFormFieldModule, MatInputModule, MatOptionModule,\n  MatSelectModule, MatIconModule, MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, \n  MatSnackBarModule, MatPaginatorModule, MatDatepickerModule, MatNativeDateModule , MatDialogModule} from '@angular/material';\n  \nimport { StudentComponent } from './masters/student/student/student.component';\nimport { AggridtestComponent } from './aggridtest/aggridtest.component';\n// import { AgGridModule } from 'ag-grid-angular/main';\nimport { CustomizedCellComponent } from './aggrid/customized-cell/customized-cell.component';\nimport { StudentDetailComponent } from './masters/student/student-detail/student-detail.component';\nimport { StudentlistComponent } from './masters/student/studentlist/studentlist.component';\nimport { TestaggridComponent } from './aggrid/testaggrid/testaggrid.component';\nimport { CustomcellComponent } from './aggrid/customcell/customcell.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { RegisterUserComponent } from './auth/register-user/register-user.component';\nimport { LoginUserComponent } from './auth/login-user/login-user.component';\nimport { SelectorComponent } from './tools/selector/selector.component';\nimport { MastersComponent } from './masters/masters/masters/masters.component';\nimport { MasterComponent } from './masters/masters/master/master.component';\nimport { MastereditComponent } from './masters/masters/masteredit/masteredit.component';\nimport { TeacherlistComponent } from './masters/teacher/teacherlist/teacherlist.component';\nimport { TeacherDetailComponent } from './masters/teacher/teacher-detail/teacher-detail.component';\nimport { AttendanceComponent } from './trans/att/attendance/attendance.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    EventsComponent,\n    SpecialEventsComponent,\n    ExampleComponent,\n    HeroesComponent,\n    DivisionComponent,\n    StudentComponent,\n    AggridtestComponent,\n    CustomizedCellComponent,\n    StudentDetailComponent,\n    StudentlistComponent,\n    TestaggridComponent,\n    CustomcellComponent,\n    RegisterUserComponent,\n    LoginUserComponent,\n    SelectorComponent,\n    MastersComponent,\n    MasterComponent,\n    MastereditComponent,\n    TeacherlistComponent,\n    TeacherDetailComponent,\n    AttendanceComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    BrowserAnimationsModule,\n    AgGridModule.withComponents([CustomizedCellComponent]),\n  ],\n  providers: [AuthService, AuthGuard, AuthGuardRoles, EventService,\n    MasterService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  entryComponents: [CustomcellComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".edit-form {\\n    min-width: 150px;\\n    width: 100%;\\n}\\n\\n.field-full-width {\\n    width: 100%;\\n}\"","module.exports = \"<div>\\n    <br>\\n    <mat-card>\\n        <section class=\\\"mat-typography\\\">\\n            <div>\\n                <h3>User login</h3>\\n            </div>\\n        </section>\\n        <!-- <mat-divider></mat-divider> -->\\n        <br>\\n        <form [formGroup]=\\\"loginForm\\\" class=\\\"edit-form\\\">\\n            <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput placeholder=\\\"Email/Mobile No\\\" formControlName=\\\"email\\\" required>\\n                <mat-error *ngIf=\\\"!loginForm.controls['email'].valid && loginForm.controls['email'].touched\\\">\\n                    email/mobile is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n                <mat-error *ngIf=\\\"!loginForm.controls['password'].valid && loginForm.controls['password'].touched\\\">\\n                    Password is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-divider></mat-divider>\\n            <br><br>\\n            <button type=\\\"submit\\\" (click)=\\\"loginUser()\\\" [disabled]=\\\"loginForm.pristine || loginForm.invalid \\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\nimport { MatSnackBar } from '@angular/material';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'app-login-user',\n  templateUrl: './login-user.component.html',\n  styleUrls: ['./login-user.component.css']\n})\nexport class LoginUserComponent implements OnInit {\n  loginUserData = {};\n  logedUser = {};\n  username = '';\n  loginForm: FormGroup;\n  constructor(private _auth: AuthService, private _router: Router, private fb: FormBuilder, private snackBar: MatSnackBar ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', [Validators.required, ] ],\n    });\n  }\n  loginUser(){\n    // tslint:disable-next-line:forin\n    for (const field in this.loginForm.controls) {\n      this.loginUserData[field] = this.loginForm.get(field).value;\n      // console.log(field + ':' + this.selected[field]);\n    }\n    console.log(this.loginUserData);\n    this._auth.loginUser(this.loginUserData)\n    .subscribe(\n      res => {\n        console.log(res.user);\n        localStorage.setItem('token', res.token)\n        this.username = this.loginUserData['email'];\n        console.log('User name is ' + this.username);\n        localStorage.setItem('username', res.user['email'])\n        localStorage.setItem('userType', res.user['userType'])\n        localStorage.setItem('userid', res.user['_id'])\n        this._router.navigate(['/selector']);\n      },\n      err => {\n        console.log(err);\n        this.snackBar.open(`Invalid credintials`, 'OK', {\n          duration: 1500\n        });\n      }\n    )\n  }\n}\n","module.exports = \".edit-form {\\n    min-width: 150px;\\n    width: 100%;\\n}\\n\\n.field-full-width {\\n    width: 100%;\\n    color: blue;\\n}\\n\\nh2 {\\n    color: blue;\\n    font-style: inherit;\\n}\"","module.exports = \"<div>\\n    <br>\\n    <mat-card>\\n        <section class=\\\"mat-typography\\\">\\n            <div>\\n                <h2>User Registration</h2>\\n            </div>\\n        </section>\\n        <!-- <mat-divider></mat-divider> -->\\n        <br>\\n        <form [formGroup]=\\\"loginForm\\\" class=\\\"edit-form\\\">\\n            <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput placeholder=\\\"Email/Mobile No\\\" formControlName=\\\"email\\\" required>\\n                <mat-error *ngIf=\\\"!loginForm.controls['email'].valid && loginForm.controls['email'].touched\\\">\\n                    email/mobile is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n                <mat-error *ngIf=\\\"!loginForm.controls['password'].valid && loginForm.controls['password'].touched\\\">\\n                    Password is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Parent\\\" formControlName=\\\"parent\\\">\\n                    <mat-option *ngFor=\\\"let p of parents\\\" [value]=\\\"p\\\">{{p}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!loginForm.controls['parent'].valid && loginForm.controls['parent'].touched\\\">\\n                    Parent is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"User Type\\\" formControlName=\\\"userType\\\">\\n                    <mat-option *ngFor=\\\"let p of userTypes\\\" [value]=\\\"p\\\">{{p}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!loginForm.controls['userType'].valid && loginForm.controls['userType'].touched\\\">\\n                    User Type is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-divider></mat-divider>\\n            <br><br>\\n            <button type=\\\"submit\\\" (click)=\\\"registerUser()\\\" [disabled]=\\\"loginForm.pristine || loginForm.invalid \\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n        </form>\\n    </mat-card>\\n</div>\"","import { state } from '@angular/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\nimport { MatSnackBar } from '@angular/material';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n  registerUserData = {};\n  parents = ['--', 'Father', 'Mother', 'Guardian'];\n  userTypes = ['Parent', 'Teacher', 'Admin'];\n  loginForm: FormGroup;\n  constructor(private _auth: AuthService, private _router: Router, private fb: FormBuilder, private snackBar: MatSnackBar ) {\n    this.createForm();\n  }\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', [Validators.required, ] ],\n      parent: '',\n      userType: ['', [Validators.required, ] ],\n    });\n  }\n  ngOnInit() {\n  }\n  registerUser() {\n    // console.log(this.registerUserData);\n    // tslint:disable-next-line:forin\n    for (const field in this.loginForm.controls) {\n      this.registerUserData[field] = this.loginForm.get(field).value;\n      // console.log(field + ':' + this.selected[field]);\n    }\n    this._auth.registerUser(this.registerUserData)\n    .subscribe(\n      res => {\n        console.log(res);\n        if (res.status === 'Y') {\n          console.log('subscribe-client: ' + res);\n          console.log('before component', res);\n          localStorage.setItem('token', res.token);\n          localStorage.setItem('username', this.registerUserData['email']);\n          console.log(localStorage.getItem('username'));\n          this._router.navigate(['/login']);\n        } else {\n          this.snackBar.open(`Invalid entry! ${res.message}`, 'OK', {\n              duration: 3000\n          });\n        }\n      },\n      err => {\n        console.log('client: ' + err)\n        // this.snackBar.open(`Invalid entry ${err}`, 'OK', {\n        //   duration: 1500\n        // });\n      }\n      \n    )\n  }\n}\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\n// import { CanActivate, Router } from '@angular/router';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\n// import { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardRoles implements CanActivate {\n  constructor(private _authService: AuthService, private _router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const roles = route.data['roles'] as Array<string>;\n    console.log('roles: ' + roles);\n    for (const role of roles) {\n      console.log(role);\n      if (this._authService.loggedInAdmin(role)) {\n        return true;\n      }\n    }\n      this._router.navigate(['selector']);\n      return false;\n  }\n}\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _authService: AuthService,private _router:Router ){}\n  canActivate():boolean{\n    if (this._authService.loggedIn()){\n      return true;\n      // console.log('true')\n    } else{\n      this._router.navigate(['login'])\n      // console.log('false')\n      return false;\n    }\n  }\n}\n\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router'\nimport * as myGlobals from '../../global'; //<==== this one\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private _registerUrl = myGlobals.serverpath + 'api/register';\n  private _loginUrl = myGlobals.serverpath + 'api/login';\n  private can = false;\n  servPath = '';\n  constructor(private http: HttpClient, private _router: Router) { \n    if (myGlobals.debugApp) {\n      this.servPath = myGlobals.serverpath;\n    }\n    this._registerUrl = this.servPath + 'api/register';\n    this._loginUrl = this.servPath + 'api/login';\n  }\n  registerUser(user) {\n    return this.http.post<any>(this._registerUrl, user);\n  }\n  loginUser(user) {\n    return this.http.post<any>(this._loginUrl, user);\n  }\n  loggedIn() {\n    // console.log(!!localStorage.getItem('token'))\n    return !!localStorage.getItem('token')\n  }\n  logoutUser() {\n    localStorage.removeItem('token')\n    // this._router.navigate(['/events'])\n    this._router.navigate(['/login'])\n  }\n  getToken() {\n    return localStorage.getItem('token')\n  }\n  loggedInAdmin(userType) {\n    return !!localStorage.getItem('token') && localStorage.getItem('userType') === userType;\n  }\n  loggedAsAdmin() {\n    return !!localStorage.getItem('token') && localStorage.getItem('userType') === 'Admin';\n  }\n  loggedAsTeacher() {\n    return !!localStorage.getItem('token') && localStorage.getItem('userType') === 'Teacher';\n  }\n  loggedAsParent() {\n    return !!localStorage.getItem('token') && localStorage.getItem('userType') === 'Parent';\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http'\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector:Injector){}\n  intercept(req, next) {\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone(\n      {\n        headers: req.headers.set('Authorization', `Bearer ${authService.getToken()}`)\n      }\n    )\n    return next.handle(tokenizedReq)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as myGlobals from './global'; \n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  private _eventsUrl = myGlobals.serverpath + \"api/events\";\n  private _specialEventsUrl = myGlobals.serverpath + \"api/special\";\n  constructor(private http: HttpClient) { }\n  getEvents(){\n    console.log(myGlobals.serverpath);\n    return this.http.get<any>(this._eventsUrl);\n  }\n  getSpecialEvents(){\n    return this.http.get<any>(this._specialEventsUrl);\n  }\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<button class=\\\"btn btn-primary\\\">New</button>\\n<div class=\\\"row mt-5\\\">\\n    <div class=\\\"col-md-3 mb-3\\\" *ngFor=\\\"let event of events\\\">\\n        <div class=\\\"card text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{event.name}}</h5>\\n                <!-- <p class=\\\"card-text\\\">{{event.description}}</p> -->\\n                <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Edit {{event.name}}</a>\\n            </div>\\n            <!-- <div class=\\\"card-footer text-muted\\\">\\n                {{event.date | date:'shortDate'}}\\n            </div> -->\\n        </div>\\n    </div>\\n</div>\"","import { EventService } from '../event.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n  events=[]\n  constructor(private _eventService:EventService) { }\n\n  ngOnInit() {\n    this._eventService.getEvents()\n    .subscribe(\n      res => this.events =res,\n      err => console.log(err)\n    )\n    //console.log('from events username is :  '+localStorage.getItem('username'))\n  }\n\n}\n","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 300px;\\n}\\n\\n.example-header {\\n    min-height: 64px;\\n    padding: 8px 24px 0;\\n}\\n\\n.mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n}\\n\\n.mat-table {\\n    overflow: auto;\\n    max-height: 500px;\\n}\"","module.exports = \"<div class=\\\"example-header\\\">\\n    <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n</div>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n\\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Progress Column -->\\n        <ng-container matColumnDef=\\\"progress\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </mat-cell>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Color Column -->\\n        <ng-container matColumnDef=\\\"color\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </mat-row>\\n    </mat-table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\\n\\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\\n      Use of this source code is governed by an MIT-style license that\\n      can be found in the LICENSE file at http://angular.io/license -->\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.css']\n})\nexport class ExampleComponent implements OnInit, AfterViewInit {\n  displayedColumns = ['id', 'name', 'progress', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users: UserData[] = [];\n    for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); }\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n  ngOnInit() {\n   \n  }\n  /**\n   * Set the paginator and sort after the view init since this component will\n   * be able to query its view for the initialized paginator and sort.\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n}\n\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name =\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","//'use strict';\n\nexport const sep='/';\nexport const version: String =\"22.2.2\";\n\nexport const debugApp: boolean = true;\nexport const serverpath: string =\"http://localhost:3000/\";","module.exports = \"\"","module.exports = \"<p>\\n  heroes works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row pt-5\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n        <div class=\\\"card rounded-0\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3 class=\\\"mb-0\\\">Login</h3>\\n            </div>\\n            <div class=\\\"cord-body\\\">\\n                <form class=\\\"form\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">Email</label>\\n                        <input [(ngModel)]=\\\"loginUserData.email\\\" name=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control rounded-0\\\" required>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">Password</label>\\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" class=\\\"form-control rounded-0\\\" required>\\n                    </div>\\n                    <button (click)=\\\"loginUser()\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\">Login</button>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { AuthService } from '../auth/service/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginUserData={}\n  username=''\n  constructor(private _auth:AuthService, private _router:Router) { }\n\n  ngOnInit() {\n  }\n  loginUser(){\n    console.log(this.loginUserData);\n    this._auth.loginUser(this.loginUserData)\n    .subscribe(\n      res => {\n        console.log(res)\n        localStorage.setItem('token',res.token)\n        this.username=this.loginUserData['email']\n        console.log('User name is '+ this.username)\n        localStorage.setItem('username',this.loginUserData['email'])\n        this._router.navigate(['/special'])\n      },\n      err => console.log(err)\n    )\n  }\n}\n","module.exports = \".masters {\\n    margin: 0 0 2em 0;\\n    list-style-type: none;\\n    padding: 0;\\n    width: 15em;\\n}\\n\\n.masters li {\\n    position: relative;\\n    cursor: pointer;\\n    background-color: #EEE;\\n    margin: .5em;\\n    padding: .3em 0;\\n    height: 1.6em;\\n    border-radius: 4px;\\n}\\n\\n.masters li:hover {\\n    color: #607D8B;\\n    background-color: #DDD;\\n    left: .1em;\\n}\\n\\n.masters a {\\n    color: #888;\\n    text-decoration: none;\\n    position: relative;\\n    display: block;\\n    width: 250px;\\n}\\n\\n.masters a:hover {\\n    color: #607D8B;\\n}\\n\\n.masters .badge {\\n    display: inline-block;\\n    font-size: small;\\n    color: white;\\n    padding: .5em 0em 0em 0em;\\n    background-color: #607D8B;\\n    line-height: 1em;\\n    position: relative;\\n    left: -1px;\\n    top: -5.2px;\\n    height: 2em;\\n    min-width: 16px;\\n    text-align: center;\\n    margin-right: .8em;\\n    border-radius: 4px 0 0 4px;\\n}\\n\\nbutton {\\n    background-color: #eee;\\n    border: none;\\n    padding: 5px 10px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    cursor: hand;\\n    font-family: Arial;\\n}\\n\\nbutton:hover {\\n    background-color: #cfd8dc;\\n}\\n\\nbutton.delete {\\n    position: relative;\\n    left: 199px;\\n    top: -31px;\\n    display: inline-block;\\n    font-size: small;\\n    color: white;\\n    /* padding: .5em 0em 0em 0em; */\\n    background-color: #607D8B;\\n    line-height: 1em;\\n    height: 2em;\\n    min-width: 16px;\\n    text-align: center;\\n    margin-right: .8em;\\n    border-radius: 4px 4px 4px 4px;\\n}\"","module.exports = \"<h2>Class Divisions</h2>\\n\\n<div>\\n    <label>Division Name:\\n    <input #divName />\\n  </label>\\n    <!-- (click) passes input value to add() and then clears the input -->\\n    <button (click)=\\\"add(divName.value); divName.value=''\\\">\\n    add\\n  </button>\\n</div>\\n\\n<ul class=\\\"masters\\\">\\n    <li *ngFor=\\\"let division of divisions; index as i\\\">\\n        <a routerLink=\\\"/detail/{{division.id}}\\\">\\n            <span class=\\\"badge\\\">{{i+1}}</span> {{division.name}}\\n        </a>\\n        <button class=\\\"delete\\\" title=\\\"delete division\\\" (click)=\\\"delete(division)\\\">x</button>\\n    </li>\\n</ul>\"","import { EventService } from './../../../event.service';\nimport { MasterService } from './../../../masterservices/master.service';\nimport { Component, OnInit } from '@angular/core';\nimport { defineDirective } from '@angular/core/src/render3';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-division',\n  templateUrl: './division.component.html',\n  styleUrls: ['./division.component.css']\n})\nexport class DivisionComponent implements OnInit {\n\n  constructor(private divisionService: MasterService, private snackBar: MatSnackBar) { }\n  divisions = [];\n  division = {};\n  ngOnInit() {\n    this.divisionService.getDivisions()\n    .subscribe(\n      res => this.divisions = res,\n      err => console.log(err)\n    );\n    //console.log('from events username is :  '+localStorage.getItem('username'))\n  }\n  add(divName: string): void {\n    divName=divName.trim();\n    if (!divName) { return; }\n    this.division = {\"name\": divName};\n    this.divisionService.addDivision(this.division)\n      .subscribe(division => {\n        console.log(\"final: \",division);\n        this.divisions.push(division);\n        this.snackBar.open('Division added successfully', 'OK', {\n          duration: 3000\n        });\n      },\n      err => console.log(err));\n  }\n\n  delete(division): void {\n    // this.heroes = this.heroes.filter(h => h !== hero);\n    // this.heroService.deleteHero(hero).subscribe();\n    const index: number = this.divisions.indexOf(division);\n    this.divisionService.deleteDivision(division._id).subscribe((dd) => {\n      // console.log(dd);\n      if (index !== -1) {\n        this.divisions.splice(index, 1);\n      }\n      this.snackBar.open('Division deleted successfully', 'OK', {\n        duration: 3000\n      });\n      //console.log(dd);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<h3>{{this.master.name}}</h3>\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"navigateBack()\\\">Back</button>&nbsp;\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"naviageMaster('')\\\">Create New </button>\\n\\n<!-- [routerLink]=\\\"['/category', category, page ]\\\" -->\\n<div class=\\\"row mt-5\\\">\\n    <div class=\\\"col-md-3 mb-3\\\" *ngFor=\\\"let master of masters\\\">\\n        <div class=\\\"card text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\" style=\\\"color: Red\\\">{{master._id}}</h5>\\n                <p class=\\\"card-text\\\" style=\\\"color: blue \\\">{{master.name}}</p>\\n                <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Edit {{master.name}}</a> -->\\n                <!-- <button><mat-icon>home</mat-icon></button> -->\\n                <!-- <button mat-icon-button>Click me!</button> -->\\n\\n                <!-- <mat-icon class=\\\"mat-icon-rtl-mirror\\\" svgIcon=\\\"thumb-up\\\"></mat-icon> -->\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n                <button mat-raised-button style=\\\"background:burlywood\\\" (click)=\\\"naviageMaster(master)\\\">Edit</button>\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(master)\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { MasterService } from './../../../masterservices/master.service';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBar } from '@angular/material';\nimport { Location } from '@angular/common';\nimport { MatDialog, MatDialogConfig} from '@angular/material';\n@Component({\n  selector: 'app-master',\n  templateUrl: './master.component.html',\n  styleUrls: ['./master.component.css']\n})\nexport class MasterComponent implements OnInit {\n  masters = [];\n  masterTable = '';\n  comboTable = '';\n  comboField = '';\n  heading = '';\n  master: any = {};\n  constructor(private masterService: MasterService, private router: Router,\n     private route: ActivatedRoute, private snackBar: MatSnackBar,private location: Location, \n     public dialog: MatDialog) {\n      this.route.queryParams.subscribe(params => {\n        // this.heading = params['heading'],\n        this.masterTable = params['masterTable'];\n        // this.comboTable = params['comboTable'];\n        // this.comboField = params['comboField'];\n        });\n\n     }\n\n  ngOnInit() {\n    // this.route.params.subscribe(params => {\n    //   this.masterName = params.data;\n    //   console.log('ngOnInit: ' + this.masterName);\n    // });\n    this.masterService.getMasterListById(this.masterTable).subscribe(res => {\n          this.master = res;\n          console.log(this.master);\n          // tslint:disable-next-line:forin\n    });\n    // this.masterService.getMasterList()\n    // .subscribe(\n    //   res => this.masters = res,\n    //   err => console.log(err)\n    // );\n    this.masterService.getMasters(this.masterTable)\n    .subscribe(\n      res => this.masters = res,\n      err => console.log(err)\n    );\n  }\n  naviageMaster(master){\n    // this.router.navigate([`/masteredit/${master._id}`]);\n    let id = '';\n    if (master === '') {\n      id = '__new';\n    } else {\n      id = master._id;\n    }\n    // console.log('edit clicked ', this.masterName, + '   ' + master.name);\n    // this.router.navigate(['/masteredit', `${this.masterTable}`, `${id}`]);\n    const navigationExtras: NavigationExtras = {\n      queryParams: {\n          // 'heading': this.heading,\n          'masterTable': this.masterTable,\n          // 'comboTable': this.comboTable,\n          // 'comboField': this.comboField,\n          'id': id\n      }\n    };\n    this.router.navigate(['/masteredit'], navigationExtras);\n  }\n  navigateBack() {\n    this.location.back();\n  }\n  delete(master) {\n    if (confirm(`delete ${master.name} ?`)) {\n      this.masterService.deleteMaster(master, this.masterTable).subscribe((dd) => {\n        // var res = this.gridApi.updateRowData({ remove: selectedData });\n      this.snackBar.open(`${this.masterTable.toLocaleUpperCase()}: ${master.name}  deleted successfully`, 'OK', {\n          duration: 3000\n        });\n        const index: number = this.masters.indexOf(master);\n        if (index !== -1) {\n          this.masters.splice(index, 1);\n        }\n      });\n    } else {\n      // Do nothing!\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <br>\\n    <mat-card>\\n        <section class=\\\"mat-typography\\\">\\n            <div>\\n                <h3 style=\\\"color: maroon\\\">{{this.heading}} {{heading1}}</h3>\\n            </div>\\n        </section>\\n        <!-- <mat-divider></mat-divider> -->\\n        <br>\\n        <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form\\\">\\n            <mat-form-field class=\\\"field-full-width\\\" style=\\\"color: Red\\\">\\n                <input matInput placeholder=\\\"Id\\\" formControlName=\\\"_id\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['_id'].valid && updateForm.controls['_id'].touched\\\">\\n                    Id is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput placeholder=\\\"Description\\\" formControlName=\\\"name\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['name'].valid && updateForm.controls['name'].touched\\\">\\n                    Description is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field *ngIf=\\\"addCombo\\\">\\n                <mat-select placeholder=\\\"{{this.master.combo.caption}}\\\" formControlName=\\\"{{this.master.combo.comboField}}\\\">\\n                    <mat-option *ngFor=\\\"let c of combo\\\" [value]=\\\"c._id\\\">{{c.name}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"field-full-width\\\" *ngIf=\\\"master.addField\\\">\\n                <input matInput placeholder=\\\"{{this.master.addField.caption}}\\\" formControlName=\\\"{{this.master.addField.name}}\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls[this.master.addField.name].valid && updateForm.controls[this.master.addField.name].touched\\\">\\n                    {{this.master.addField}} is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-divider></mat-divider>\\n            <br><br>\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"navigateBack()\\\">Back</button>&nbsp;\\n            <button type=\\\"submit\\\" (click)=\\\"update()\\\" [disabled]=\\\"updateForm.pristine || updateForm.invalid || disableSave \\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { MasterService } from './../../../masterservices/master.service';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl,\n } from '@angular/forms';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-masteredit',\n  templateUrl: './masteredit.component.html',\n  styleUrls: ['./masteredit.component.css']\n})\nexport class MastereditComponent implements OnInit {\n  updateForm: FormGroup;\n  id: String;\n  masterTable: String;\n  selected: any = {};\n  isSave = true;\n  addNew = true;\n  disableSave = false;\n  heading1 = 'Edit';\n  newId = '__new' ;\n  combo = [];\n  addCombo = false;\n  master: any = {};\n  addField: '';\n  // tslint:disable-next-line:max-line-length\n  constructor(private masterService: MasterService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar, private fb: FormBuilder,  private location: Location ) {\n    this.route.queryParams.subscribe(params => {\n      // this.heading = params['heading'];\n      this.masterTable = params['masterTable'];\n      // this.comboTable = params['comboTable'];\n      // this.comboField = params['comboField'];\n      this.id = params['id'];\n      this.addNew = params.id === this.newId;\n      });\n    this.createForm();\n  }\n  createForm() {\n    this.updateForm = this.fb.group({\n      _id: [{value: '', disabled: !this.addNew}, Validators.required],\n      name: ['', Validators.required]\n    });\n    \n  }\n  ngOnInit() {\n    this.masterService.getMasterListById(this.masterTable).subscribe(res => {\n        this.master = res;\n        console.log('master list: ', this.master);\n        if (this.master.addField) {\n          this.addField = this.master.addField.name;\n          this.updateForm.addControl(this.master.addField.name, new FormControl('', Validators.required));\n        }\n        if (this.master.combo) {\n          this.updateForm.addControl(this.master.combo.comboField, new FormControl('', Validators.required));\n          this.addCombo = true;\n          this.masterService.getMasters(this.master.combo.table)\n            .subscribe(\n              res1 => this.combo = res1,\n              err => console.log(err)\n            );\n        }\n          // console.log('master out: ', this.master);\n        this.heading1 = this.addNew ? 'Create New' : 'Edit';\n        if (!this.addNew) {\n          this.isSave = false;\n          this.masterService.getMastersById({id: this.id, table: this.masterTable}).subscribe(res2 => {\n            this.selected = res2;\n            // console.log(this.selected);\n            // tslint:disable-next-line:forin\n            for (const field in this.updateForm.controls) {\n              this.updateForm.get(field).setValue(this.selected[field]);\n            }\n          });\n        }\n    });\n  }\n  navigateBack() {\n    this.location.back();\n  }\n  update() {\n\n    if (this.updateForm.invalid) {\n      return;\n    }\n    // tslint:disable-next-line:forin\n    for (const field in this.updateForm.controls) {\n      this.selected[field] = this.updateForm.get(field).value;\n      // console.log(field + ':' + this.selected[field]);\n    }\n    // console.log('save : ' + this.selected);\n    this.masterService.updateMaster({id: this.id, table: this.masterTable}, this.selected).subscribe((res) => {\n      this.snackBar.open(`${this.masterTable.toLocaleUpperCase()} ${res['message']}`, 'OK', {\n        duration: 3000\n      });\n      if (this.id === this.newId && res['status'] === 'S' ) {\n      // this.router.navigate([`/example`]);\n        this.disableSave = true;\n        // this.router.navigate([`/studentdetail/${res['id']}`]);\n        const navigationExtras: NavigationExtras = {\n          queryParams: {\n              // 'heading': this.heading,\n              'masterTable': this.masterTable,\n              // 'comboTable': this.comboTable,\n              // 'comboField': this.comboField,\n              'id': this.id\n          }\n        };\n        this.router.navigate(['/masteredit'],  navigationExtras);\n      }\n    });\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row mt-5\\\">\\n    <div class=\\\"col-md-2 mb-3\\\" *ngFor=\\\"let master of masters\\\">\\n        <div class=\\\"card text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <!-- <h5 class=\\\"card-title\\\">{{master.param}}</h5> -->\\n                <!-- <p class=\\\"card-text\\\">{{master.name}}</p> -->\\n                <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\"> {{master.name}}</a> -->\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"masterLinks(master)\\\">{{master.name}}</button>\\n\\n            </div>\\n            <!-- <div class=\\\"card-footer text-muted\\\">\\n                {{event.date | date:'shortDate'}}\\n            </div> -->\\n        </div>\\n    </div>\\n</div>\"","import { MasterService } from './../../../masterservices/master.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-masters',\n  templateUrl: './masters.component.html',\n  styleUrls: ['./masters.component.css']\n})\nexport class MastersComponent implements OnInit {\n  masters = [];\n  constructor(private router: Router, private masterService: MasterService ) { }\n\n  ngOnInit() {\n    this.masterService.getMasterList()\n    .subscribe(\n      res => this.masters = res,\n      err => console.log(err)\n    );\n  }\n  masterLinks(master) {\n    console.log(master.param);\n    // this.router.navigate([`/${master.param}`]);\n    const navigationExtras: NavigationExtras = {\n      queryParams: {\n          // 'heading': master.name,\n          'masterTable': master.id,\n          // 'comboTable': master.combo,\n          // 'comboField': master.comboField\n      }\n    };\n    // this.router.navigate([`/master/${master.param}`]);\n    if(master.route){\n      this.router.navigate([`${master.route}`]);\n    } else {\n      this.router.navigate([`/master`], navigationExtras);\n    }\n  }\n}\n","module.exports = \".edit-form {\\n    min-width: 150px;\\n    width: 100%;\\n}\\n\\n.field-full-width {\\n    width: 100%;\\n}\"","module.exports = \"<div>\\n    <br>\\n    <mat-card>\\n        <section class=\\\"mat-typography\\\">\\n            <div *ngIf=\\\"isSave\\\">\\n                <h3>Add Student</h3>\\n            </div>\\n            <div *ngIf=\\\"!isSave\\\">\\n                <h3>Update Student</h3>\\n            </div>\\n\\n        </section>\\n        <mat-divider></mat-divider>\\n        <br>\\n        <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form\\\">\\n            <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput placeholder=\\\"Student Name\\\" formControlName=\\\"name\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['name'].valid && updateForm.controls['name'].touched\\\">\\n                    Student name is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Class No\\\" formControlName=\\\"classNo\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['classNo'].valid && updateForm.controls['classNo'].touched\\\">\\n                    Class No is <strong>required and allow only number</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Admission No\\\" formControlName=\\\"admNo\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['admNo'].valid && updateForm.controls['admNo'].touched\\\">\\n                    Admission No is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <!-- <input matInput placeholder=\\\"Religion\\\" [(ngModel)]=\\\"selected.myRelegion\\\" formControlName=\\\"myRelegion\\\" #myRelegion> -->\\n                <mat-select placeholder=\\\"Religion\\\" formControlName=\\\"myRelegion\\\" (selectionChange)=\\\"changedReligion($event.value)\\\">\\n                    <mat-option *ngFor=\\\"let religion of religions\\\" [value]=\\\"religion._id\\\">{{religion.name}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n            <!-- <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput placeholder=\\\"Caste\\\" formControlName=\\\"myCaste\\\" [(ngModel)]=\\\"selected.myCaste\\\" #myCaste>\\n            </mat-form-field> -->\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Caste\\\" formControlName=\\\"myCaste\\\">\\n                    <mat-option *ngFor=\\\"let caste of castesfiltered\\\" [value]=\\\"caste._id\\\">{{caste.name}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Class\\\" formControlName=\\\"myClass\\\">\\n                    <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class._id\\\">{{class.name}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!updateForm.controls['myClass'].valid && updateForm.controls['myClass'].touched\\\">\\n                    Class is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Parent\\\" formControlName=\\\"myUser\\\">\\n                    <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user._id\\\">{{user.email}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!updateForm.controls['myUser'].valid && updateForm.controls['myUser'].touched\\\">\\n                    Parent is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n\\n            <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date of birth\\\" formControlName=\\\"dob\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n                <mat-error *ngIf=\\\"!updateForm.controls['dob'].valid && updateForm.controls['dob'].touched\\\">\\n                    <strong>the date format dd/mm/yyyy</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"pickerto\\\" placeholder=\\\"Date of join\\\" formControlName=\\\"dateOfJoin\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerto\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerto></mat-datepicker>\\n                <mat-error *ngIf=\\\"!updateForm.controls['dateOfJoin'].valid && updateForm.controls['dateOfJoin'].touched\\\">\\n                    Date Of Join <strong>required and the date format dd/mm/yyyy</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <!-- <mat-divider></mat-divider>\\n            <br><br> -->\\n            <span>   </span>\\n            <mat-checkbox placeholder=\\\"TC Issued\\\" formControlName=\\\"TCIssued\\\">TC Issued</mat-checkbox>\\n            <!-- <select #selectElem (change)=\\\"setNewUser(selectElem.value)\\\">\\n                <option *ngFor=\\\"let user of lUsers\\\" [value]=\\\"user.id\\\">\\n                    {{user.Name}}\\n                </option>\\n            </select> -->\\n            <!-- <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-hint>Errors appear instantly!</mat-hint>\\n                <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n                    Please enter a valid email address\\n                </mat-error>\\n                <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                    Email is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field> -->\\n\\n\\n\\n            <mat-divider></mat-divider>\\n            <br><br>\\n            <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/students\\\">Back</button>&nbsp;\\n            <button type=\\\"submit\\\" (click)=\\\"updateStudent()\\\" [disabled]=\\\"updateForm.pristine || updateForm.invalid || disableSave\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n            <!-- <button type=\\\"submit\\\" (click)=\\\"updateStudent()\\\" mat-raised-button color=\\\"primary\\\">Save</button> -->\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MatSnackBar } from '@angular/material';\nimport { MasterService } from './../../../masterservices/master.service';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl,\n } from '@angular/forms';\n// import {FormsModule, ReactiveFormsModule} from '@angular/forms'; \n// import { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n\n@Component({\n  selector: 'app-student-detail',\n  templateUrl: './student-detail.component.html',\n  styleUrls: ['./student-detail.component.css'],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class StudentDetailComponent implements OnInit {\n\n  id: String;\n  selected: any = {};\n  updateForm: FormGroup;\n  users = [];\n  classes = [];\n  religions = [];\n  castes = [];\n  castesfiltered = [];\n  isSave = true;\n  disableSave = false;\n  // tslint:disable-next-line:max-line-length\n  constructor(private masterService: MasterService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar, private fb: FormBuilder) {\n    this.createForm();\n  }\n  createForm() {\n    this.updateForm = this.fb.group({\n      name: ['', Validators.required],\n      classNo: ['', [Validators.required, CustomValidator.numeric]],\n      admNo: ['', Validators.required],\n      myRelegion: '',\n      myClass: ['', Validators.required],\n      myCaste: '',\n      dob: '',\n      dateOfJoin: ['', Validators.required],\n      TCIssued: ['', Validators.required],\n      myUser: ['', Validators.required],\n\n    });\n  }\n  // tslint:disable-next-line:member-ordering\n  \n\n  ngOnInit() {\n    // return;\n    console.log(this.route.params);\n    this.masterService.getUsers()\n    .subscribe(\n      res => this.users = res,\n      err => console.log(err)\n    );\n    this.masterService.getReligions()\n    .subscribe(\n      (res) => {this.religions = res; },\n      err => console.log(err)\n    );\n    this.masterService.getCastes()\n    .subscribe(\n      (res) => {this.castes = res;\n          this.castesfiltered = res;\n      },\n      err => console.log(err)\n    );\n    this.masterService.getClasses()\n    .subscribe(\n      res => this.classes = res,\n      err => console.log(err)\n    );\n    // this.castesfiltered = this.castes;\n    \n    this.route.params.subscribe(params => {\n      this.id = params.id;\n      // console.log('ngOnInit: '+this.id);\n      console.log(this.id);\n      if (this.id !== '__new')\n      {\n        this.isSave = false;\n        this.masterService.getStudentById(this.id).subscribe(res => {\n          this.selected = res;\n          // tslint:disable-next-line:forin\n          for (const field in this.updateForm.controls) {\n            this.updateForm.get(field).setValue(this.selected[field]);\n          }\n        });\n      }\n    });\n  }\n  get f() { return this.updateForm.controls; }\n  get name() { return this.updateForm.get('name'); }\n  changedReligion(code){\n    this.castesfiltered = this.castes.filter(f => f.religions === code);\n    if(this.castesfiltered.length > 0) {\n      this.updateForm.get('myCaste').setValue(this.castesfiltered[0]._id);\n    }\n  }\n  updateStudent() {\n\n    if (this.updateForm.invalid) {\n      return;\n    }\n    // tslint:disable-next-line:forin\n    for (const field in this.updateForm.controls) {\n      this.selected[field] = this.updateForm.get(field).value;\n      // console.log(field + ':' + this.selected[field]);\n    }\n    //  console.log('save : ' + this.selected);\n    this.masterService.updateStudent(this.id, this.selected).subscribe((res) => {\n      // tslint:disable-next-line:forin\n      // for (const prop in res) {\n      //   console.log(prop + ' ' + res[prop]);\n      // }\n      // console.log(res['message'])\n      this.snackBar.open(`Student ${res['message']}`, 'OK', {\n        duration: 3000\n      });\n      if (this.id === '__new' && res['status'] === 'S' ) {\n      // this.router.navigate([`/example`]);\n        this.disableSave = true;\n        this.router.navigate([`/studentdetail/${res['id']}`]);\n      }\n    });\n\n  }\n\n}\nexport class CustomValidator{\n  // Number only validation\n  static numeric(control: AbstractControl) {\n    let val = control.value;\n    if (val === null || val === '') { return null; }\n    if (!val.toString().match(/^[0-9]+(\\.?[0-9]+)?$/)) { return { 'invalidNumber': true }; }\n    return null;\n  }\n}\n\n","module.exports = \"table {\\n    width: 100%;\\n}\\n\\ntr.example-detail-row {\\n    height: 0;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):hover {\\n    background: #f5f5f5;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):active {\\n    background: #efefef;\\n}\\n\\n.example-element-row td {\\n    border-bottom-width: 0;\\n}\\n\\n.example-element-detail {\\n    overflow: hidden;\\n    display: flex;\\n}\\n\\n.example-element-diagram {\\n    min-width: 80px;\\n    border: 2px solid black;\\n    padding: 8px;\\n    font-weight: lighter;\\n    margin: 8px 0;\\n    height: 104px;\\n}\\n\\n.example-element-symbol {\\n    font-weight: bold;\\n    font-size: 40px;\\n    line-height: normal;\\n}\\n\\n.example-element-description {\\n    padding: 16px;\\n}\\n\\n.example-element-description-attribution {\\n    opacity: 0.5;\\n}\"","module.exports = \"<div>\\n    <br>\\n    <mat-card>\\n        <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/create\\\">Create New </button>\\n        <br><br>\\n        <mat-divider></mat-divider>\\n        <br>\\n        <table mat-table [dataSource]=\\\"students\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n            <ng-container matColumnDef=\\\"classNo\\\">\\n                <th mat-header-cell *matHeaderCellDef>Class No</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.classNo}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef>Name</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"admNo\\\">\\n                <th mat-header-cell *matHeaderCellDef>Addm. No</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.admNo}} </td>\\n            </ng-container>\\n\\n\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n        </table>\\n        <mat-paginator [pageSizeOptions]=\\\"[3, 5, 10, 50,100]\\\"></mat-paginator>\\n    </mat-card>\\n</div>\\n\\n<!-- <table mat-table [dataSource]=\\\"students\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of headerColumns\\\">\\n        <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"expandedDetail\\\">\\n        <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"displayedColumns.length\\\">\\n            <div class=\\\"example-element-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n                <div class=\\\"example-element-diagram\\\">\\n                    <div class=\\\"example-element-position\\\"> {{element.classNo}} </div>\\n                    <div class=\\\"example-element-symbol\\\"> {{element.name}} </div>\\n                    <div class=\\\"example-element-name\\\"> {{element.admNo}} </div>\\n                </div>\\n                <div class=\\\"example-element-description\\\">\\n                    {{element.myRelegion}}\\n                    <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span>\\n                </div>\\n            </div>\\n        </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\" class=\\\"example-element-row\\\" [class.example-expanded-row]=\\\"expandedElement === element\\\" (click)=\\\"expandedElement = element\\\">\\n    </tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table> -->\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { MasterService } from './../../../masterservices/master.service';\nimport { animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class StudentComponent implements OnInit, AfterViewInit {\n  //  students: PeriodicElement[] = [];\n   students = [];\n  displayedColumns = ['classNo', 'name', 'admNo'];\n  headerColumns = ['Class No', 'Name', 'Adm.No'];\n  expandedElement: PeriodicElement;\n  constructor(private masterService: MasterService) { \n\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource: MatTableDataSource<PeriodicElement>;\n\n  ngOnInit() {\n    this.fetchStudents();\n    console.log(this.students);\n    this.dataSource = new MatTableDataSource(this.students);\n    this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n  ngAfterViewInit() {\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n\n  fetchStudents() {\n    this.masterService.getStudents()\n    .subscribe(\n      res => this.students = res,\n      err => console.log(err)\n    );\n  }\n}\nexport interface PeriodicElement {\n    _id : String;\n    name :String;\n    myClass : String;\n    classNo : 1;\n    dateOfJoin : Date;\n    dob : Date;\n    admNo : String;\n    myRelegion : String;\n    myCaste : String;\n    __v : Number\n}","module.exports = \".ag-theme-balham .sick-days-warning {\\n    background-color: sandybrown !important;\\n}\\n\\n.ag-theme-balham .sick-days-breach {\\n    background-color: lightcoral !important;\\n}\"","module.exports = \"<button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/studentdetail/__new\\\">Create New </button>\\n\\n<div class=\\\"col-12\\\">\\n    <ag-grid-angular style=\\\"width: 100%;height: 400px;\\\" class=\\\"ag-theme-balham\\\" (gridReady)=\\\"onGridReady($event)\\\" [columnDefs]=\\\"columnDefs\\\" [enableSorting]=\\\"true\\\" [enableFilter]=\\\"true\\\" [animateRows]=\\\"true\\\" [pagination]=\\\"true\\\" rowSelection=\\\"single\\\" [paginationPageSize]=\\\"10\\\"\\n        [sortingOrder]=\\\"sortingOrder\\\" gridOptions=\\\"gridOptions\\\" [rowClassRules]=\\\"rowClassRules\\\" [enableColResize]=\\\"true\\\" [frameworkComponents]=\\\"frameworkComponents\\\" (rowClicked)=\\\"onRowClicked($event)\\\" (cellValueChanged)=\\\"onCellValueChanged($event)\\\">\\n    </ag-grid-angular>\\n</div>\\n<button (click)=\\\"getRow()\\\">Get row data</button>\\n\\n<!-- [rowMultiSelectWithClick]=\\\"true\\\"> -->\\n<!-- [rowDragManaged]=\\\"true\\\" -->\"","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { CustomizedCellComponent } from './../../../aggrid/customized-cell/customized-cell.component';\nimport { MasterService } from './../../../masterservices/master.service';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\n// import { of } from 'rxjs/Observable/of';\n// import 'rxjs/add/observable/forkJoin';\n// import { forkJoin } from 'rxjs';\n// import {MatCheckboxModule} from '@angular/material/checkbox';\n@Component({\n  selector: 'app-studentlist',\n  templateUrl: './studentlist.component.html',\n  styleUrls: ['./studentlist.component.css']\n})\nexport class StudentlistComponent implements OnInit {\n  private gridApi;\n  private gridColumnApi;\n  private columnDefs;\n  private sortingOrder;\n  private frameworkComponents;\n  private rowSelection;\n  // private getRowClass;\n  private rowClassRules;\n  // private gridOptions\n  constructor(private masterService: MasterService, private snackBar: MatSnackBar, private router: Router) {\n    this.columnDefs = [\n      {\n        headerName: 'No',\n        field: 'classNo',\n        width: 60,\n        sortingOrder: ['asc','desc'],\n        rowDrag : true,\n        // cellRenderer: 'customizedNoCell'\n      },\n      {\n        headerName: 'Name',\n        field: 'name',\n        width: 100,\n        // editable: true,\n        // cellStyle: {color: 'red', 'background-color': 'green'},\n        sortingOrder: ['asc','desc'],\n        cellStyle: function(params) {\n          if (params.value == 'Joe') {\n              return {color: 'red', backgroundColor: 'green'};\n          } else {\n              return null;\n          }\n        }\n      },\n      {\n        headerName: 'Adm. No',\n        field: 'admNo',\n        width: 80,\n        cellStyle: {color: 'red'},\n        editable: true\n      },\n      {\n        headerName: 'Date of Birth',\n        field: 'dob',\n        width: 100,\n        // cellStyle: {color: 'blue'},\n        filter: 'agDateColumnFilter',\n        cellRenderer: (data) => {\n          return data.value ? (new Date(data.value)).toLocaleDateString() : '';\n          },\n        // filterParams: {\n        //   comparator: function(filterLocalDateAtMidnight, cellValue) {\n        //     var dateAsString = cellValue;\n        //     var dateParts = dateAsString.split(\"/\");\n        //     var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\n        //     if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n        //       return 0;\n        //     }\n        //     if (cellDate < filterLocalDateAtMidnight) {\n        //       return -1;\n        //     }\n        //     if (cellDate > filterLocalDateAtMidnight) {\n        //       return 1;\n        //     }\n        //   }\n        // }\n      },\n      { headerName: 'Actions',\n          suppressMenu: true,\n          suppressSorting: true,\n\n          template:\n            `<button mat-button color=\"primary\" data-action-type=\"view\" >Edit</button>\n            <button mat-button color=\"warn\" data-action-type=\"remove\" >Delete</button>\n            `\n        }\n    ]\n    this.sortingOrder = ['asc', 'desc', 'null']\n    // this.frameworkComponents = {// add this for CustomizedCellComponent\n    //   customizedNoCell: CustomizedCellComponent\n    // }\n    this.rowSelection = 'multiple';\n    // this.gridApi.rowStyle = {background: 'black'};\n    \n  }\n\n  editStudent(id) {\n    // this.snackBar.open('View action clicked-click', 'OK', {\n    //   duration: 3000\n    // });\n    // console.log('edit-id:  ' + id);\n    this.router.navigate([`/studentdetail/${id}`]);\n\n  }\n  delete(student: any, selectedData: any): void {\n    console.log('delete :' + student._id);\n    // let selectedData = this.gridApi.getSelectedRows();\n    // console.log('delete ::' + selectedData);\n    this.masterService.deleteStudent(student._id).subscribe((dd) => {\n      // let selectedRowData = this.gridApi.getSelectedRows();\n\n      // const deleteSubscriptions = selectedRowData.map((row) => {\n      //   // return console.log(row);\n      //   var index = row.rowIndex;\n      //   // this.gridApi.data.remo\n      // });\n      \n      // var selectedData = this.gridApi.getSelectedRows();\n      var res = this.gridApi.updateRowData({ remove: selectedData });\n\n      this.snackBar.open(`Student: ${student.name}  deleted successfully`, 'OK', {\n        duration: 3000\n      });\n      // console.log(dd);\n    });\n  }\n  onRowClicked(e) {\n    if (e.event.target !== undefined) {\n        let data = e.data;\n        let actionType = e.event.target.getAttribute(\"data-action-type\");\n\n        switch(actionType) {\n            case 'view':\n                return this.onActionViewClick(data);\n            case 'remove':\n                return this.onActionRemoveClick(data);\n        }\n    }\n  }\n\n   onActionViewClick(data: any){\n    // this.snackBar.open('View action clicked', 'OK', {\n    //   duration: 3000\n    // });\n    console.log('View action clicked', data);\n    this.editStudent(data._id)\n    // this.router.navigate([`/studentdetail/${data._id}`]);\n   }\n\n   onActionRemoveClick(data: any){\n    console.log('clik:',data._id)\n    var selectedData = this.gridApi.getSelectedRows();\n    this.delete(data, selectedData);\n  }\n  ngOnInit() {\n  }\n  getRow(){\n    var rowNode = this.gridApi.getDisplayedRowAtIndex(0);\n    var selectedRowData = this.gridApi.getSelectedRows();\n    // console.log(selectedRowData.data);\n    const deleteSubscriptions = selectedRowData.map((row) => {\n      return console.log(row);\n    });\n    console.log(deleteSubscriptions.data);\n    // alert(selectedRowData.data.name);\n  }\n  \n  onGridReady(params){\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    // const dataValue = [{'firstName':'sulaiman','age':52},{'firstName':'Qaueed','age':22}];\n    this.gridApi.rowClass = 'sick-days-warnin';\n    this.masterService.getStudents()\n    .subscribe(\n      (data) => {\n          params.api.setRowData(data);\n        }\n      )\n    \n  }\n  onCellValueChanged(params: any) {\n    console.log(params.data);\n  }\n  rowsSelected() {\n    return this.gridApi && this.gridApi.getSelectedRows().length > 0;\n}\n}\n\n","module.exports = \".edit-form {\\n    min-width: 150px;\\n    width: 100%;\\n}\\n\\n.field-full-width {\\n    width: 100%;\\n}\"","module.exports = \"<div>\\n    <br>\\n    <mat-card>\\n        <section class=\\\"mat-typography\\\">\\n            <div *ngIf=\\\"isSave\\\">\\n                <h3>Add Teacher</h3>\\n            </div>\\n            <div *ngIf=\\\"!isSave\\\">\\n                <h3>Update Teacher</h3>\\n            </div>\\n\\n        </section>\\n        <mat-divider></mat-divider>\\n        <br>\\n        <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form\\\">\\n            <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput placeholder=\\\"Teacher Name\\\" formControlName=\\\"name\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['name'].valid && updateForm.controls['name'].touched\\\">\\n                    Teacher name is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"PEN\\\" formControlName=\\\"PEN\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['PEN'].valid && updateForm.controls['PEN'].touched\\\">\\n                    PEN No is <strong>required and allow only number</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Mobile No\\\" formControlName=\\\"mobileNo\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['mobileNo'].valid && updateForm.controls['mobileNo'].touched\\\">\\n                    MobileNo No is <strong>required and allow only number</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" required>\\n                <mat-error *ngIf=\\\"!updateForm.controls['address'].valid && updateForm.controls['address'].touched\\\">\\n                    Address No is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <!-- <input matInput placeholder=\\\"Religion\\\" [(ngModel)]=\\\"selected.myRelegion\\\" formControlName=\\\"myRelegion\\\" #myRelegion> -->\\n                <mat-select placeholder=\\\"Religion\\\" formControlName=\\\"myRelegion\\\" (selectionChange)=\\\"changedReligion($event.value)\\\">\\n                    <mat-option *ngFor=\\\"let religion of religions\\\" [value]=\\\"religion._id\\\">{{religion.name}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n            <!-- <mat-form-field class=\\\"field-full-width\\\">\\n                <input matInput placeholder=\\\"Caste\\\" formControlName=\\\"myCaste\\\" [(ngModel)]=\\\"selected.myCaste\\\" #myCaste>\\n            </mat-form-field> -->\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Caste\\\" formControlName=\\\"myCaste\\\">\\n                    <mat-option *ngFor=\\\"let caste of castesfiltered\\\" [value]=\\\"caste._id\\\">{{caste.name}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Classes\\\" formControlName=\\\"myClasses\\\" multiple>\\n                    <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class\\\">{{class.name}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!updateForm.controls['myClasses'].valid && updateForm.controls['myClasses'].touched\\\">\\n                    Class is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Subjects\\\" formControlName=\\\"mySubjects\\\" multiple>\\n                    <mat-option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject\\\">{{subject.name}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!updateForm.controls['mySubjects'].valid && updateForm.controls['mySubjects'].touched\\\">\\n                    Subjects is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"User Name\\\" formControlName=\\\"myUser\\\">\\n                    <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user._id\\\">{{user.email}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!updateForm.controls['myUser'].valid && updateForm.controls['myUser'].touched\\\">\\n                    Username is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n\\n            <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date of birth\\\" formControlName=\\\"dob\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n                <mat-error *ngIf=\\\"!updateForm.controls['dob'].valid && updateForm.controls['dob'].touched\\\">\\n                    <strong>the date format dd/mm/yyyy</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"pickerto\\\" placeholder=\\\"Date of join\\\" formControlName=\\\"dateOfJoin\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerto\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerto></mat-datepicker>\\n                <mat-error *ngIf=\\\"!updateForm.controls['dateOfJoin'].valid && updateForm.controls['dateOfJoin'].touched\\\">\\n                    Date Of Join <strong>required and the date format dd/mm/yyyy</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n\\n\\n            <mat-divider></mat-divider>\\n            <br><br>\\n            <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/teachers\\\">Back</button>&nbsp;\\n            <button type=\\\"submit\\\" (click)=\\\"update()\\\" [disabled]=\\\"updateForm.pristine || updateForm.invalid \\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { MasterService } from './../../../masterservices/master.service';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl, FormArray,\n } from '@angular/forms';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n\n@Component({\n  selector: 'app-teacher-detail',\n  templateUrl: './teacher-detail.component.html',\n  styleUrls: ['./teacher-detail.component.css'],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class TeacherDetailComponent implements OnInit {\n  id: String;\n  selected: any = {};\n  updateForm: FormGroup;\n  users = [];\n  classes = [];\n  religions = [];\n  castes = [];\n  subjects = [];\n  castesfiltered = [];\n  isSave = true;\n  disableSave = false;\n  // tslint:disable-next-line:max-line-length\n  constructor(private masterService: MasterService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar, private fb: FormBuilder) {\n    this.createForm();\n  }\n  createForm() {\n    this.updateForm = this.fb.group({\n      name: ['', Validators.required],\n      PEN: ['', [Validators.required, ]],\n      address: ['', Validators.required],\n      myClasses: '',\n      dob: '',\n      dateOfJoin: ['', Validators.required],\n      mobileNo: ['', Validators.required],\n      myUser: ['', Validators.required],\n      mySubjects: ['', Validators.required],\n      myRelegion: '',\n      myCaste: '',\n    });\n  }\n  // get fData() {\n  //   return this.updateForm.get('myClasses') as FormArray;\n  // }\n  ngOnInit() {\n    // return;\n    console.log(this.route.params);\n    this.masterService.getUsers()\n    .subscribe(\n      res => this.users = res,\n      err => console.log(err)\n    );\n    this.masterService.getReligions()\n    .subscribe(\n      (res) => {this.religions = res; },\n      err => console.log(err)\n    );\n    this.masterService.getCastes()\n    .subscribe(\n      (res) => {this.castes = res;\n          this.castesfiltered = res;\n      },\n      err => console.log(err)\n    );\n    this.masterService.getClasses()\n    .subscribe(\n      res => this.classes = res,\n      err => console.log(err)\n    );\n    this.masterService.getSubjects()\n    .subscribe(\n      res => this.subjects = res,\n      err => console.log(err)\n    );\n    // this.castesfiltered = this.castes;\n    // var index = 0;\n    this.route.params.subscribe(params => {\n      this.id = params.id;\n      const control = <FormArray>this.updateForm.controls['myClasses'];\n      // console.log('ngOnInit: '+this.id);\n      console.log(this.id);\n      if (this.id !== '__new')\n      {\n        this.isSave = false;\n        this.masterService.getTeacherById(this.id).subscribe(res => {\n          this.selected = res;\n          console.log(this.selected);\n          // tslint:disable-next-line:forin\n          for (const field in this.updateForm.controls) {\n            if (field === 'myClasses') {\n              this.updateForm.get(field).setValue(this.getSelectData(this.selected[field], this.classes));\n            } else if (field === 'mySubjects') {\n              this.updateForm.get(field).setValue(this.getSelectData1(this.selected[field], this.subjects));\n            } else {\n              this.updateForm.get(field).setValue(this.selected[field]);\n            }\n          }\n        });\n      }\n    });\n  }\n  getSelectData(dataFromTable, listData) { \n    var array: any[] = [];\n    array.length = 0;\n    dataFromTable.forEach((value, index) => {\n      const itemIndex = listData.find(x => x._id === value);\n      array.push(itemIndex);\n    });\n    return array;\n  }\n  getSelectData1(dataFromTable, listData) { \n    var array1: any[] = [];\n    array1.length = 0;\n    dataFromTable.forEach((value, index) => {\n      const itemIndex = listData.find(x => x._id === value);\n      array1.push(itemIndex);\n    });\n    return array1;\n  }\n  changedReligion(code){\n    this.castesfiltered = this.castes.filter(f => f.religions === code);\n    if(this.castesfiltered.length > 0) {\n      this.updateForm.get('myCaste').setValue(this.castesfiltered[0]._id);\n    }\n  }\n  update() {\n\n    if (this.updateForm.invalid) {\n      return;\n    }\n    // tslint:disable-next-line:forin\n    for (const field in this.updateForm.controls) {\n      this.selected[field] = this.updateForm.get(field).value;\n      // console.log(field + ':' + this.selected[field]);\n    }\n    //  console.log('save : ' + this.selected);\n    this.masterService.updateTeacher(this.id, this.selected).subscribe((res) => {\n      // tslint:disable-next-line:forin\n      // for (const prop in res) {\n      //   console.log(prop + ' ' + res[prop]);\n      // }\n      // console.log(res['message'])\n      this.snackBar.open(`Student ${res['message']}`, 'OK', {\n        duration: 3000\n      });\n      if (this.id === '__new' && res['status'] === 'S' ) {\n      // this.router.navigate([`/example`]);\n        this.disableSave = true;\n      }\n      this.router.navigate([`/teacherdetail/${res['id']}`]);\n    });\n\n  }\n}\n","module.exports = \".ag-theme-balham .sick-days-warning {\\n    background-color: sandybrown !important;\\n}\\n\\n.ag-theme-balham .sick-days-breach {\\n    background-color: lightcoral !important;\\n}\"","module.exports = \"<button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/teacherdetail/__new\\\">Create New </button>\\n\\n<div class=\\\"col-12\\\">\\n    <ag-grid-angular style=\\\"width: 100%;height: 400px;\\\" class=\\\"ag-theme-balham\\\" (gridReady)=\\\"onGridReady($event)\\\" [columnDefs]=\\\"columnDefs\\\" [enableSorting]=\\\"true\\\" [enableFilter]=\\\"true\\\" [animateRows]=\\\"true\\\" [pagination]=\\\"true\\\" rowSelection=\\\"single\\\" [paginationPageSize]=\\\"10\\\"\\n        [sortingOrder]=\\\"sortingOrder\\\" gridOptions=\\\"gridOptions\\\" [enableColResize]=\\\"true\\\" (rowClicked)=\\\"onRowClicked($event)\\\">\\n    </ag-grid-angular>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { MasterService } from './../../../masterservices/master.service';\n@Component({\n  selector: 'app-teacherlist',\n  templateUrl: './teacherlist.component.html',\n  styleUrls: ['./teacherlist.component.css']\n})\nexport class TeacherlistComponent implements OnInit {\n  private gridApi;\n  private gridColumnApi;\n  private columnDefs;\n  private sortingOrder;\n\n\n    constructor(private masterService: MasterService, private snackBar: MatSnackBar, private router: Router) {\n    this.columnDefs = [\n      {\n        headerName: 'PEN',\n        field: 'PEN',\n        width: 60,\n        sortingOrder: ['asc','desc'],\n        rowDrag : true,\n        // cellRenderer: 'customizedNoCell'\n      },\n      {\n        headerName: 'Name',\n        field: 'name',\n        width: 100,\n        // editable: true,\n        // cellStyle: {color: 'red', 'background-color': 'green'},\n        sortingOrder: ['asc','desc'],\n      },\n      {\n        headerName: 'address',\n        field: 'Address',\n        width: 100,\n        // editable: true,\n        // cellStyle: {color: 'red', 'background-color': 'green'},\n        sortingOrder: ['asc','desc'],\n      },\n      {\n        headerName: 'Date of Join',\n        field: 'dob',\n        width: 100,\n        // cellStyle: {color: 'blue'},\n        filter: 'agDateColumnFilter',\n        cellRenderer: (data) => {\n          return data.value ? (new Date(data.value)).toLocaleDateString() : '';\n          },\n      },\n      { headerName: 'Actions',\n          suppressMenu: true,\n          suppressSorting: true,\n\n          template:\n            `<button mat-button color=\"primary\" data-action-type=\"view\" >Edit</button>\n            <button mat-button color=\"warn\" data-action-type=\"remove\" >Delete</button>\n            `\n        }\n    ]\n    this.sortingOrder = ['asc', 'desc', 'null']\n  }\n\n  ngOnInit() {\n  }\n  onGridReady(params){\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.rowClass = 'sick-days-warnin';\n    this.masterService.getTeachers()\n    .subscribe(\n      (data) => {\n          params.api.setRowData(data);\n        }\n      )\n    }\n  onRowClicked(e) {\n    if (e.event.target !== undefined) {\n        const data = e.data;\n        const actionType = e.event.target.getAttribute('data-action-type');\n\n        switch (actionType) {\n            case 'view':\n                return this.onActionViewClick(data);\n            case 'remove':\n                return this.onActionRemoveClick(data);\n        }\n    }\n  }\n  onActionViewClick(data: any){\n    console.log('View action clicked', data);\n    this.edit(data._id)\n  }\n  onActionRemoveClick(data: any){\n    console.log('clik:', data._id)\n    var selectedData = this.gridApi.getSelectedRows();\n    this.delete(data, selectedData);\n  }\n  edit(id) {\n    this.router.navigate([`/teacherdetail/${id}`]);\n  }\n  delete(student: any, selectedData: any): void {\n    this.masterService.deleteTeacher(student._id).subscribe((dd) => {\n      let res = this.gridApi.updateRowData({ remove: selectedData });\n      this.snackBar.open(`Student: ${student.name}  deleted successfully`, 'OK', {\n        duration: 3000\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as myGlobals from '../global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MasterService {\n  // private url = myGlobals.serverpath + \"masters/divisions\";\n  servPath = '';\n  constructor(private http: HttpClient) {\n    if (myGlobals.debugApp) {\n      this.servPath = myGlobals.serverpath;\n    }\n  }\n  getDivisions(){\n    return this.http.get<any>(this.servPath + \"masters/divisions\");\n  }\n  addDivision(division){\n    return this.http.post<any>(`${this.servPath}masters/divisions`,division);\n    //return this.http.post(`${this.uri}/issues/add`, issue);\n  }\n\n  deleteDivision(id) {\n    console.log('delete id:',id);\n    return this.http.get(`${this.servPath}masters/divisions/delete/${id}`);\n  }\n  getMasterList() {\n    return this.http.get<any>(`${this.servPath}masterlist/masters`);\n  }\n  getMasterListById(id) {\n    console.log('getMasterListById id:', id);\n    return this.http.get<any>(`${this.servPath}masterlist/masters/${id}`);\n  }\n  getMasters(master) {\n    return this.http.get<any>(`${this.servPath}masters/masters/${master}`);\n  }\n  getMastersById(master) {\n    console.log(master);\n    const id = `${master.id}|${master.table}`;\n    return this.http.get<any>(`${this.servPath}masters/master/${id}`);\n  }\n  updateMaster(master, masterData) {\n    const id = `${master.id}|${master.table}`;\n    return this.http.post(`${this.servPath}masters/master/update/${id}`, masterData);\n  }\n  deleteMaster(master, masterName) {\n    const id = `${master._id}|${masterName}`;\n    return this.http.get(`${this.servPath}masters/master/delete/${id}`);\n  }\n\n  ////// Students\n  getStudents() {\n    return this.http.get<any>(`${this.servPath}masters/students`);\n  }\n  getStudentsByUser(userid) {\n    return this.http.get<any>(`${this.servPath}masters/studentsByUser/${userid}`);\n  }\n  getStudentById(id) {\n    // console.log('service id is :' + id);\n    return this.http.get<any>(`${this.servPath}masters/students/${id}`);\n    // return this.http.get(`${this.uri}/issues/${id}`);\n  }\n  getStudentByClass(cls) {\n    // console.log('service id is :' + id);\n    return this.http.get<any>(`${this.servPath}masters/studentsByClass/${cls}`);\n    // return this.http.get(`${this.uri}/issues/${id}`);\n  }\n  updateStudent(id, student) {\n    return this.http.post(`${this.servPath}masters/students/update/${id}`, student);\n  }\n  deleteStudent(id) {\n    console.log('service delete id:',id);\n    return this.http.get(`${this.servPath}masters/students/delete/${id}`);\n  }\n  ////// Teacher\n  getTeachers() {\n    return this.http.get<any>(`${this.servPath}masters/teachers`);\n  }\n  getTeachersByUser(userid) {\n    console.log('getTeachersByUser   ' +  userid);\n    return this.http.get<any>(`${this.servPath}masters/teachersByUser/${userid}`);\n  }\n  getTeacherById(id) {\n    // console.log('service id is :' + id);\n    return this.http.get<any>(`${this.servPath}masters/teachers/${id}`);\n    // return this.http.get(`${this.uri}/issues/${id}`);\n  }\n  updateTeacher(id, student) {\n    console.log(student);\n    return this.http.post(`${this.servPath}masters/teachers/update/${id}`, student);\n  }\n  deleteTeacher(id) {\n    console.log('service delete id:',id);\n    return this.http.get(`${this.servPath}masters/teachers/delete/${id}`);\n  }\n\n  getUsers() {\n    return this.http.get<any>(`${this.servPath}masters/users`);\n  }\n  getClasses() {\n    return this.http.get<any>(`${this.servPath}masters/classes`);\n  }\n  getClassesByTeacher(teacher) {\n    console.log(teacher);\n    return this.http.get<any>(`${this.servPath}masters/classes/${teacher}`);\n  }\n  getReligions() {\n    return this.http.get<any>(`${this.servPath}masters/religions`);\n  }\n  getCastes() {\n    return this.http.get<any>(`${this.servPath}masters/castes`);\n  }\n  getPhoneBook() {\n    return this.http.get<any>(`${this.servPath}masters/phoneBook`);\n  }\n  getSubjects() {\n    return this.http.get<any>(`${this.servPath}masters/subjects`);\n  }\n  getSubjectsByTeacher(teacher) {\n    console.log(teacher);\n    return this.http.get<any>(`${this.servPath}masters/subjects/${teacher}`);\n  }\n  getPeriod() {\n    return this.http.get<any>(`${this.servPath}masters/periods`);\n  }\n}\n","module.exports = \"<div class=\\\"row pt-5\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n        <div class=\\\"card rounded-0\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3 class=\\\"mb-0\\\">Register</h3>\\n            </div>\\n            <div class=\\\"cord-body\\\">\\n                <form class=\\\"form\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">Email</label>\\n                        <input [(ngModel)]=\\\"registerUserData.email\\\" name=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control rounded-0\\\" required>\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">Password</label>\\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"registerUserData.password\\\" name=\\\"password\\\" class=\\\"form-control rounded-0\\\" required>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"parent\\\">Parent</label>\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"registerUserData.parent\\\" name=\\\"parent\\\" class=\\\"form-control rounded-0\\\" required>\\n                            <option>--</option>\\n                            <option>Father</option>\\n                            <option>Mother</option>\\n                            <option>Guardian</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"userType\\\">User Type</label>\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"registerUserData.userType\\\" name=\\\"userType\\\" class=\\\"form-control rounded-0\\\" required>\\n                                <option>Parent</option>\\n                                <option>Teacher</option>\\n                                <option>Admin</option>\\n                            </select>\\n                    </div>\\n                    <button (click)=\\\"registerUser()\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\">Register</button>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { AuthService } from '../auth/service/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  // styleUrls: ['./register.component.css']\n  styles: [`\n      .example-container {\n      display: flex;\n      flex-direction: column;\n      }\n      .example-container>* {\n          width: 100%;\n      }\n  `]\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData = {};\n\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    console.log(this.registerUserData);\n    this._auth.registerUser(this.registerUserData)\n    .subscribe(\n      res => {\n        console.log('subscribe-client: ' + res);\n        console.log('before component', res);\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('username', this.registerUserData['email']);\n        console.log(localStorage.getItem('username'));\n        this._router.navigate(['/special']);\n      },\n      err => console.log(err)\n    )\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row mt-5\\\">\\n    <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let event of special\\\">\\n        <div class=\\\"card text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{event.name}}</h5>\\n                <p class=\\\"card-text\\\">{{event.description}}</p>\\n                <a href=\\\"#\\\" class=\\\"btn btn-success\\\">Buy Tickets</a>\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n                {{event.date | date:'shortDate'}}\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { EventService } from '../event.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-special-events',\n  templateUrl: './special-events.component.html',\n  styleUrls: ['./special-events.component.css']\n})\nexport class SpecialEventsComponent implements OnInit {\n  special =[]\n  constructor(private _eventService:EventService,private _router:Router) { }\n\n  ngOnInit() {\n    this._eventService.getSpecialEvents()\n    .subscribe(\n      res => this.special=res,\n      err => {\n        if (err instanceof HttpErrorResponse){\n          if(err.status===401){\n            this._router.navigate(['/login'])\n          }\n        }\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n    {{username}} <br> {{userType}}\\n</p>\\n<div>\\n    <br>\\n    <mat-card>\\n        <mat-divider></mat-divider>\\n        <br>\\n        <form [formGroup]=\\\"form\\\" class=\\\"edit-form\\\">\\n\\n            <mat-form-field *ngIf=\\\"showClass\\\">\\n                <mat-select placeholder=\\\"Class\\\" formControlName=\\\"myClass\\\">\\n                    <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class._id\\\">{{class.name}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!form.controls['myClass'].valid && form.controls['myClass'].touched\\\">\\n                    Class is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field *ngIf=\\\"showStudent\\\">\\n                <mat-select placeholder=\\\"Student\\\" formControlName=\\\"student\\\">\\n                    <mat-option *ngFor=\\\"let student of students\\\" [value]=\\\"student._id\\\">{{student.name}}</mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"!form.controls['student'].valid && form.controls['student'].touched\\\">\\n                    student is <strong>required</strong>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-divider></mat-divider>\\n            <br><br>\\n            <!-- <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/students\\\">Back</button>&nbsp; -->\\n            <button type=\\\"submit\\\" (click)=\\\"updateData()\\\" [disabled]=\\\"form.pristine || form.invalid\\\" mat-raised-button color=\\\"primary\\\">OK</button>\\n            <!-- <button type=\\\"submit\\\" (click)=\\\"updateStudent()\\\" mat-raised-button color=\\\"primary\\\">Save</button> -->\\n        </form>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MasterService } from './../../masterservices/master.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl,\n  FormGroupDirective, NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-selector',\n  templateUrl: './selector.component.html',\n  styleUrls: ['./selector.component.css']\n})\nexport class SelectorComponent implements OnInit {\n  userType = '';\n  username = '';\n  classes = [];\n  students = [];\n  userid = '';\n  showClass = false;\n  showStudent = false;\n  form: FormGroup;\n  constructor(private masterService: MasterService, private fb: FormBuilder, private router: Router) {\n    this.createForm();\n  }\n  createForm() {\n    this.form = this.fb.group({\n      myClass: [''],\n      student: [''],\n      academic: [''],\n    });\n  }\n  ngOnInit() {\n    this.username = localStorage.getItem('username');\n    this.userType = localStorage.getItem('userType');\n    if (this.userType === 'Parent') { this.showStudent = true; }\n    if (this.userType === 'Teacher') { this.showClass = true; }\n    if (this.userType === 'Admin') { this.showClass = true; }\n    this.userid = localStorage.getItem('userid');\n    this.masterService.getClasses()\n      .subscribe(\n        res => this.classes = res,\n        err => console.log(err)\n      );\n    this.masterService.getStudentsByUser(this.userid)\n      .subscribe(\n        res => this.students = res,\n        err => console.log(err)\n      );\n      this.form.get('student').setValue(localStorage.getItem('student'));\n      this.form.get('myClass').setValue(localStorage.getItem('myClass'));\n  }\n  updateData(){\n    if (this.showClass)\n      { localStorage.setItem('myClass', this.form.get('myClass').value) }\n    if (this.showStudent)\n      { localStorage.setItem('student', this.form.get('student').value) }\n    this.router.navigate([`/students`]);\n  }\n}\n","module.exports = \"table {\\n    width: 100%;\\n    border-collapse: separate;\\n    border-spacing: 0 10px;\\n    margin-top: -10px;\\n}\\n\\ntd.mat-column-classNo {\\n    width: 20%;\\n    /* padding-right: 8px; */\\n}\\n\\ntd.mat-column-attendance {\\n    width: 20%;\\n    /* padding-right: 8px; */\\n    text-align: center;\\n}\\n\\nth.mat-column-attendance {\\n    /* width: 20%; */\\n    /* padding-right: 8px; */\\n    text-align: center;\\n}\\n\\n.mat-header-cell {\\n    background-color: darkblue;\\n    color: yellow;\\n    /* font-size: large; */\\n    font-weight: bold;\\n}\"","module.exports = \"<br>\\n<form [formGroup]=\\\"form\\\" class=\\\"form\\\">\\n    <mat-form-field>\\n        <mat-select placeholder=\\\"Class\\\" formControlName=\\\"myClass\\\" (selectionChange)=\\\"classChanged($event.value)\\\">\\n            <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class._id\\\">{{class.name}}</mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"!form.controls['myClass'].valid && form.controls['myClass'].touched\\\">\\n            Class is <strong>required</strong>\\n        </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n        <mat-select placeholder=\\\"Period\\\" formControlName=\\\"period\\\">\\n            <mat-option *ngFor=\\\"let period of periods\\\" [value]=\\\"period._id\\\">{{period.name}}</mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"!form.controls['period'].valid && form.controls['period'].touched\\\">\\n            Period is <strong>required</strong>\\n        </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n        <mat-select placeholder=\\\"Subjects\\\" formControlName=\\\"mySubject\\\">\\n            <mat-option *ngFor=\\\"let sub of subjects\\\" [value]=\\\"sub._id\\\">{{sub.name}}</mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"!form.controls['mySubject'].valid && form.controls['mySubject'].touched\\\">\\n            Subject is <strong>required</strong>\\n        </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date\\\" formControlName=\\\"dates\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <mat-error *ngIf=\\\"!form.controls['dates'].valid && form.controls['dates'].touched\\\">\\n            <strong>the date format dd/mm/yyyy</strong>\\n        </mat-error>\\n    </mat-form-field>\\n</form>\\n<table mat-table [dataSource]=\\\"dataSource1\\\" class=\\\"mat-elevation-z8\\\">\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"classNo\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.classNo}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n\\n    <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"attendance\\\">\\n        <th mat-header-cell *matHeaderCellDef>Present\\n            <!-- <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\" [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n            </mat-checkbox> -->\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"onChangeCheckBox($event, i, element)\\\" [checked]=\\\"element.attendance\\\">\\n            </mat-checkbox>\\n        </td>\\n    </ng-container>\\n    <!-- <ng-container matColumnDef=\\\"attendance\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n            <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\" [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n            </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selement.attendance)\\\">\\n            </mat-checkbox>\\n        </td>\\n    </ng-container> -->\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selection.toggle(row)\\\">\\n    </tr>\\n</table>\\n<br>\\n<button mat-raised-button color=\\\"accent\\\">Back</button>\\n<button type=\\\"submit\\\" (click)=\\\"update()\\\" [disabled]=\\\"form.pristine || form.invalid\\\" mat-raised-button color=\\\"primary\\\">OK</button>\"","// import { element } from 'protractor';\nimport { MasterService } from './../../../masterservices/master.service';\nimport { AttendanceService } from './../../../transervice/attendance.service';\n\nimport { Component, OnInit } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\n// import { Observable } from 'rxjs/Observable';\n// import 'rxjs/add/observable/of';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl,\n  FormGroupDirective, NgForm } from '@angular/forms';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nexport interface StudentsData {\n  teachers: string;\n  students: string;\n  description: string;\n  dates: Date;\n  att: string;\n  periods: string;\n  classNo: number;\n  name: string;\n  attendance: boolean;\n}\n\n\n\n@Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.css'],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class AttendanceComponent implements OnInit {\n  displayedColumns: string[] = [ 'classNo', 'name', 'attendance'];\n  //  dataSource = new MatTableDataSource<StudentsData>(this.ELEMENT_DATA);\n  selection = new SelectionModel<StudentsData>(true, []);\n  form: FormGroup;\n  classes = [];\n  subjects = [];\n  students = [];\n  periods = [];\n  userid: string;\n  teacher: any = {};\n  dataSource1: DataSource<any>;\n  tableData = [];\n  attendance = [];\n  constructor(private masterService: MasterService, private attendacneService: AttendanceService, private fb: FormBuilder) { \n    this.createForm();\n  }\n  createForm() {\n    this.form = this.fb.group({\n      myClass: [''],\n      period: [''],\n      mySubject: [''],\n      dates: [''],\n    });\n  }\n  ngOnInit() {\n    this.userid = localStorage.getItem('userid');\n    const currentDate = new Date();\n    this.form.get('dates').setValue (currentDate);\n    this.masterService.getTeachersByUser(this.userid)\n    .subscribe(\n      res => {\n        this.teacher = res;\n        console.log('Teacher: ' + this.teacher._id);\n        this.masterService.getClassesByTeacher(this.teacher._id)\n        .subscribe(\n          (res1) => {\n            this.classes = res1;\n            if (this.classes.length > 0) {\n              this.form.get('myClass').setValue(this.classes[0]._id);\n              this.fillStudentData();\n            }\n            console.log(res1);\n          },\n          err => console.log(err)\n          );\n        this.masterService.getSubjectsByTeacher(this.teacher._id)\n        .subscribe(\n          (res2) => {\n            this.subjects = res2;\n            if (this.subjects.length > 0) {\n              this.form.get('mySubject').setValue(this.subjects[0]._id); \n            }\n            console.log(res2);\n          },\n          err => console.log(err)\n          );\n      }\n    );\n    this.masterService.getPeriod()\n    .subscribe(\n      (res) => {\n        this.periods = res;\n        this.form.get('period').setValue(this.periods[0]._id);\n      },\n      err => console.log(err)\n    );\n  }\n  classChanged(code) {\n    this.fillStudentData();\n  }\n  fillStudentData() {\n    this.masterService.getStudentByClass(this.form.get('myClass').value)\n    .subscribe(\n      (res) => {\n        console.log(res);\n        this.students = res;\n        // console.log(this.students[0]['name']);\n        // tslint:disable-next-line:prefer-const\n        let len = this.students.length;\n        console.log(len);\n        let std: StudentsData;\n        this.tableData.length = 0;\n        for (let i = 0; i < len; i++) {\n          std = {\n              teachers: this.teacher['_id'],\n              students: this.students[i]['_id'],\n              description: '',\n              dates: this.form.get('dates').value,\n              att: '',\n              periods: this.form.get('period').value,\n              classNo: this.students[i]['classNo'],\n              name: this.students[i]['name'],\n              attendance: true\n          };\n          this.tableData.push(std);\n        }\n        this.dataSource1  = new MatTableDataSource(this.tableData);\n        console.log(this.tableData);\n      },\n      err => console.log(err)\n      );\n  }\n  isAllSelected() {\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n\n  }\n  update() {\n    // tslint:disable-next-line:no-shadowed-variable\n    this.tableData.forEach(element => {\n      const toDo = element as StudentsData;\n      toDo.dates = this.form.get('dates').value;\n      toDo.att = toDo.attendance ? 'P' : 'A';\n      toDo.periods = this.form.get('period').value;\n    });\n    // console.log(this.tableData);\n    this.attendacneService.updateAttendance('a', this.tableData).subscribe((res) => {\n      console.log(res);\n    });\n  }\n  onChangeCheckBox(event, index, item) {\n    item.attendance = !item.attendance;\n    // console.log(item);\n    // console.log(index);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as myGlobals from '../global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttendanceService {\n  servPath = '';\n  constructor(private http: HttpClient) { \n    if (myGlobals.debugApp) {\n      this.servPath = myGlobals.serverpath;\n    }\n  }\n  updateAttendance(id, att) {\n    console.log('service: ' + att);\n    console.log(this.servPath);\n    return this.http.post(`${this.servPath}attendanceroutes/attendance/update/${id}`, att);\n  }\n  updateAttendance111(id, att) {\n    console.log('servicc: ' + att);\n    return this.http.get<any>(`${this.servPath}attendanceroutes/attendance/update/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}